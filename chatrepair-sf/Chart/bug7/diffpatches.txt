  private void updateBounds(TimePeriod period, int index) {
  long start = period.getStart().getTime();
  long end = period.getEnd().getTime();
- long middle = start + ((end - start) / 2);
  if (this.minStartIndex >= 0) {
  long minStart = getDataItem(this.minStartIndex).getPeriod()
  .getStart().getTime();
  if (start < minStart) {
  this.minStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minStartIndex = index;
  }
  if (this.maxStartIndex >= 0) {
  long maxStart = getDataItem(this.maxStartIndex).getPeriod()
  .getStart().getTime();
  if (start > maxStart) {
  this.maxStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxStartIndex = index;
  }
  if (this.minMiddleIndex >= 0) {
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
?                                                      ---------

+ long minMiddle = getDataItem(this.minMiddleIndex).getPeriod()
?      ++++++++

+ .getStart().getTime() + (getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime() - getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime()) / 2;
+ if (start + ((end - start) / 2) < minMiddle) {
- .getTime();
- long minMiddle = s + (e - s) / 2;
- if (middle < minMiddle) {
  this.minMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minMiddleIndex = index;
  }
  if (this.maxMiddleIndex >= 0) {
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
?                            ^^                        ---------

+ long maxMiddle = getDataItem(this.maxMiddleIndex).getPeriod()
?      ++++++++                      ^^

+ .getStart().getTime() + (getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime() - getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime()) / 2;
+ if (start + ((end - start) / 2) > maxMiddle) {
- .getTime();
- long maxMiddle = s + (e - s) / 2;
- if (middle > maxMiddle) {
  this.maxMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxMiddleIndex = index;
  }
  if (this.minEndIndex >= 0) {
- long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long minEnd = getDataItem(this.minEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end < minEnd) {
  this.minEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minEndIndex = index;
  }
  if (this.maxEndIndex >= 0) {
- long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long maxEnd = getDataItem(this.maxEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end > maxEnd) {
  this.maxEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxEndIndex = index;
  }
  }

  private void updateBounds(TimePeriod period, int index) {
  long start = period.getStart().getTime();
  long end = period.getEnd().getTime();
  long middle = start + ((end - start) / 2);
  if (this.minStartIndex >= 0) {
  long minStart = getDataItem(this.minStartIndex).getPeriod()
  .getStart().getTime();
  if (start < minStart) {
  this.minStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minStartIndex = index;
  }
  if (this.maxStartIndex >= 0) {
  long maxStart = getDataItem(this.maxStartIndex).getPeriod()
  .getStart().getTime();
  if (start > maxStart) {
  this.maxStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxStartIndex = index;
  }
  if (this.minMiddleIndex >= 0) {
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
?      ^                                               -----------

+ long minMiddleStart = getDataItem(this.minMiddleIndex).getPeriod()
?      ^^^^^^^^^^^^^^

- .getTime();
+ .getStart().getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
?                                                      ---------

+ long minMiddleEnd = getDataItem(this.minMiddleIndex).getPeriod()
?      ++++++++ +++

- .getTime();
- long minMiddle = s + (e - s) / 2;
+ .getEnd().getTime();
+ long minMiddle = minMiddleStart + ((minMiddleEnd - minMiddleStart) / 2);
  if (middle < minMiddle) {
  this.minMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minMiddleIndex = index;
  }
  if (this.maxMiddleIndex >= 0) {
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
?      ^                     ^^                        -----------

+ long maxMiddleStart = getDataItem(this.maxMiddleIndex).getPeriod()
?      ^^^^^^^^^^^^^^                     ^^

- .getTime();
+ .getStart().getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
?                            ^^                        ---------

+ long maxMiddleEnd = getDataItem(this.maxMiddleIndex).getPeriod()
?      ++++++++ +++                     ^^

- .getTime();
- long maxMiddle = s + (e - s) / 2;
+ .getEnd().getTime();
+ long maxMiddle = maxMiddleStart + ((maxMiddleEnd - maxMiddleStart) / 2);
  if (middle > maxMiddle) {
  this.maxMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxMiddleIndex = index;
  }
  if (this.minEndIndex >= 0) {
- long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long minEnd = getDataItem(this.minEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end < minEnd) {
  this.minEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minEndIndex = index;
  }
  if (this.maxEndIndex >= 0) {
- long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long maxEnd = getDataItem(this.maxEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end > maxEnd) {
  this.maxEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxEndIndex = index;
  }
  }

  private void updateBounds(TimePeriod period, int index) {
  long start = period.getStart().getTime();
  long end = period.getEnd().getTime();
  long middle = start + ((end - start) / 2);
  if (this.minStartIndex >= 0) {
  long minStart = getDataItem(this.minStartIndex).getPeriod()
  .getStart().getTime();
  if (start < minStart) {
  this.minStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minStartIndex = index;
  }
  if (this.maxStartIndex >= 0) {
  long maxStart = getDataItem(this.maxStartIndex).getPeriod()
  .getStart().getTime();
  if (start > maxStart) {
  this.maxStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxStartIndex = index;
  }
  if (this.minMiddleIndex >= 0) {
+ TimePeriod minMiddlePeriod = getDataItem(this.minMiddleIndex).getPeriod();
+ long minMiddleStart = minMiddlePeriod.getStart().getTime();
+ long minMiddleEnd = minMiddlePeriod.getEnd().getTime();
+ long minMiddle = minMiddleStart + ((minMiddleEnd - minMiddleStart) / 2);
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long minMiddle = s + (e - s) / 2;
  if (middle < minMiddle) {
  this.minMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minMiddleIndex = index;
  }
  if (this.maxMiddleIndex >= 0) {
+ TimePeriod maxMiddlePeriod = getDataItem(this.maxMiddleIndex).getPeriod();
+ long maxMiddleStart = maxMiddlePeriod.getStart().getTime();
+ long maxMiddleEnd = maxMiddlePeriod.getEnd().getTime();
+ long maxMiddle = maxMiddleStart + ((maxMiddleEnd - maxMiddleStart) / 2);
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long maxMiddle = s + (e - s) / 2;
  if (middle > maxMiddle) {
  this.maxMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxMiddleIndex = index;
  }
  if (this.minEndIndex >= 0) {
- long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long minEnd = getDataItem(this.minEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end < minEnd) {
  this.minEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minEndIndex = index;
  }
  if (this.maxEndIndex >= 0) {
- long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long maxEnd = getDataItem(this.maxEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end > maxEnd) {
  this.maxEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxEndIndex = index;
  }
  }

  private void updateBounds(TimePeriod period, int index) {
  long start = period.getStart().getTime();
  long end = period.getEnd().getTime();
  long middle = start + ((end - start) / 2);
  if (this.minStartIndex >= 0) {
  long minStart = getDataItem(this.minStartIndex).getPeriod()
  .getStart().getTime();
  if (start < minStart) {
  this.minStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minStartIndex = index;
  }
  if (this.maxStartIndex >= 0) {
  long maxStart = getDataItem(this.maxStartIndex).getPeriod()
  .getStart().getTime();
  if (start > maxStart) {
  this.maxStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxStartIndex = index;
  }
  if (this.minMiddleIndex >= 0) {
+ TimePeriod minMiddlePeriod = getDataItem(this.minMiddleIndex).getPeriod();
+ long minMiddle = minMiddlePeriod.getStart().getTime()
+ + (minMiddlePeriod.getEnd().getTime() - minMiddlePeriod.getStart().getTime()) / 2;
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long minMiddle = s + (e - s) / 2;
  if (middle < minMiddle) {
  this.minMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minMiddleIndex = index;
  }
  if (this.maxMiddleIndex >= 0) {
+ TimePeriod maxMiddlePeriod = getDataItem(this.maxMiddleIndex).getPeriod();
+ long maxMiddle = maxMiddlePeriod.getStart().getTime()
+ + (maxMiddlePeriod.getEnd().getTime() - maxMiddlePeriod.getStart().getTime()) / 2;
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long maxMiddle = s + (e - s) / 2;
  if (middle > maxMiddle) {
  this.maxMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxMiddleIndex = index;
  }
  if (this.minEndIndex >= 0) {
- long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long minEnd = getDataItem(this.minEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end < minEnd) {
  this.minEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minEndIndex = index;
  }
  if (this.maxEndIndex >= 0) {
- long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long maxEnd = getDataItem(this.maxEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end > maxEnd) {
  this.maxEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxEndIndex = index;
  }
  }

  private void updateBounds(TimePeriod period, int index) {
  long start = period.getStart().getTime();
  long end = period.getEnd().getTime();
- long middle = start + ((end - start) / 2);
  if (this.minStartIndex >= 0) {
  long minStart = getDataItem(this.minStartIndex).getPeriod()
  .getStart().getTime();
  if (start < minStart) {
  this.minStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minStartIndex = index;
  }
  if (this.maxStartIndex >= 0) {
  long maxStart = getDataItem(this.maxStartIndex).getPeriod()
  .getStart().getTime();
  if (start > maxStart) {
  this.maxStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxStartIndex = index;
  }
  if (this.minMiddleIndex >= 0) {
+ TimePeriod minMiddlePeriod = getDataItem(this.minMiddleIndex).getPeriod();
+ long minMiddle = minMiddlePeriod.getStart().getTime() + (minMiddlePeriod.getEnd().getTime() - minMiddlePeriod.getStart().getTime()) / 2;
+ if (start + ((end - start) / 2) < minMiddle) {
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long minMiddle = s + (e - s) / 2;
- if (middle < minMiddle) {
  this.minMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minMiddleIndex = index;
  }
  if (this.maxMiddleIndex >= 0) {
+ TimePeriod maxMiddlePeriod = getDataItem(this.maxMiddleIndex).getPeriod();
+ long maxMiddle = maxMiddlePeriod.getStart().getTime() + (maxMiddlePeriod.getEnd().getTime() - maxMiddlePeriod.getStart().getTime()) / 2;
+ if (start + ((end - start) / 2) > maxMiddle) {
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long maxMiddle = s + (e - s) / 2;
- if (middle > maxMiddle) {
  this.maxMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxMiddleIndex = index;
  }
  if (this.minEndIndex >= 0) {
- long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long minEnd = getDataItem(this.minEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end < minEnd) {
  this.minEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minEndIndex = index;
  }
  if (this.maxEndIndex >= 0) {
- long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long maxEnd = getDataItem(this.maxEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end > maxEnd) {
  this.maxEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxEndIndex = index;
  }
  }

  private void updateBounds(TimePeriod period, int index) {
  long start = period.getStart().getTime();
  long end = period.getEnd().getTime();
- long middle = start + ((end - start) / 2);
  if (this.minStartIndex >= 0) {
  long minStart = getDataItem(this.minStartIndex).getPeriod()
  .getStart().getTime();
  if (start < minStart) {
  this.minStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minStartIndex = index;
  }
  if (this.maxStartIndex >= 0) {
  long maxStart = getDataItem(this.maxStartIndex).getPeriod()
  .getStart().getTime();
  if (start > maxStart) {
  this.maxStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxStartIndex = index;
  }
  if (this.minMiddleIndex >= 0) {
+ TimePeriod minMiddlePeriod = getDataItem(this.minMiddleIndex).getPeriod();
+ long minMiddle = minMiddlePeriod.getStart().getTime() + (minMiddlePeriod.getEnd().getTime() - minMiddlePeriod.getStart().getTime()) / 2;
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long minMiddle = s + (e - s) / 2;
- if (middle < minMiddle) {
?     ^^ ---

+ if (end < minMiddle) {
?     ^^

  this.minMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minMiddleIndex = index;
  }
  if (this.maxMiddleIndex >= 0) {
+ TimePeriod maxMiddlePeriod = getDataItem(this.maxMiddleIndex).getPeriod();
+ long maxMiddle = maxMiddlePeriod.getStart().getTime() + (maxMiddlePeriod.getEnd().getTime() - maxMiddlePeriod.getStart().getTime()) / 2;
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long maxMiddle = s + (e - s) / 2;
- if (middle > maxMiddle) {
?     ^^ ---

+ if (end > maxMiddle) {
?     ^^

  this.maxMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxMiddleIndex = index;
  }
  if (this.minEndIndex >= 0) {
- long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long minEnd = getDataItem(this.minEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end < minEnd) {
  this.minEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minEndIndex = index;
  }
  if (this.maxEndIndex >= 0) {
- long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long maxEnd = getDataItem(this.maxEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end > maxEnd) {
  this.maxEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxEndIndex = index;
  }
  }

  private void updateBounds(TimePeriod period, int index) {
  long start = period.getStart().getTime();
  long end = period.getEnd().getTime();
  long middle = start + ((end - start) / 2);
  if (this.minStartIndex >= 0) {
  long minStart = getDataItem(this.minStartIndex).getPeriod()
  .getStart().getTime();
  if (start < minStart) {
  this.minStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minStartIndex = index;
  }
  if (this.maxStartIndex >= 0) {
  long maxStart = getDataItem(this.maxStartIndex).getPeriod()
  .getStart().getTime();
  if (start > maxStart) {
  this.maxStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxStartIndex = index;
  }
  if (this.minMiddleIndex >= 0) {
+ TimePeriod minMiddlePeriod = getDataItem(this.minMiddleIndex).getPeriod();
+ long minMiddle = minMiddlePeriod.getStart().getTime() + ((minMiddlePeriod.getEnd().getTime() - minMiddlePeriod.getStart().getTime()) / 2);
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long minMiddle = s + (e - s) / 2;
  if (middle < minMiddle) {
  this.minMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minMiddleIndex = index;
  }
  if (this.maxMiddleIndex >= 0) {
+ TimePeriod maxMiddlePeriod = getDataItem(this.maxMiddleIndex).getPeriod();
+ long maxMiddle = maxMiddlePeriod.getStart().getTime() + ((maxMiddlePeriod.getEnd().getTime() - maxMiddlePeriod.getStart().getTime()) / 2);
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long maxMiddle = s + (e - s) / 2;
  if (middle > maxMiddle) {
  this.maxMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxMiddleIndex = index;
  }
  if (this.minEndIndex >= 0) {
- long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long minEnd = getDataItem(this.minEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end < minEnd) {
  this.minEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minEndIndex = index;
  }
  if (this.maxEndIndex >= 0) {
- long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long maxEnd = getDataItem(this.maxEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end > maxEnd) {
  this.maxEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxEndIndex = index;
  }
  }

  private void updateBounds(TimePeriod period, int index) {
  long start = period.getStart().getTime();
  long end = period.getEnd().getTime();
  long middle = start + ((end - start) / 2);
  if (this.minStartIndex >= 0) {
  long minStart = getDataItem(this.minStartIndex).getPeriod()
  .getStart().getTime();
  if (start < minStart) {
  this.minStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minStartIndex = index;
  }
  if (this.maxStartIndex >= 0) {
  long maxStart = getDataItem(this.maxStartIndex).getPeriod()
  .getStart().getTime();
  if (start > maxStart) {
  this.maxStartIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxStartIndex = index;
  }
  if (this.minMiddleIndex >= 0) {
+ TimePeriod minMiddlePeriod = getDataItem(this.minMiddleIndex).getPeriod();
+ long minMiddle = minMiddlePeriod.getStart().getTime() + (minMiddlePeriod.getEnd().getTime() - minMiddlePeriod.getStart().getTime()) / 2;
+ if (start + ((end - start) / 2) < minMiddle) {
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long minMiddle = s + (e - s) / 2;
- if (middle < minMiddle) {
  this.minMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minMiddleIndex = index;
  }
  if (this.maxMiddleIndex >= 0) {
+ TimePeriod maxMiddlePeriod = getDataItem(this.maxMiddleIndex).getPeriod();
+ long maxMiddle = maxMiddlePeriod.getStart().getTime() + (maxMiddlePeriod.getEnd().getTime() - maxMiddlePeriod.getStart().getTime()) / 2;
+ if (start + ((end - start) / 2) > maxMiddle) {
- long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
- .getTime();
- long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
- .getTime();
- long maxMiddle = s + (e - s) / 2;
- if (middle > maxMiddle) {
  this.maxMiddleIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxMiddleIndex = index;
  }
  if (this.minEndIndex >= 0) {
- long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long minEnd = getDataItem(this.minEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end < minEnd) {
  this.minEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.minEndIndex = index;
  }
  if (this.maxEndIndex >= 0) {
- long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
?                                                        ---------

+ long maxEnd = getDataItem(this.maxEndIndex).getPeriod()
- .getTime();
+ .getEnd().getTime();
  if (end > maxEnd) {
  this.maxEndIndex = index;
  }
- }
- else {
+ } else {
? ++

  this.maxEndIndex = index;
  }
  }

