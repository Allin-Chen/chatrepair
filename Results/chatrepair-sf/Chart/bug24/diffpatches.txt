  public Paint getPaint(double value) {
  double v = Math.max(value, this.lowerBound);
  v = Math.min(v, this.upperBound);
- int g = (int) ((value - this.lowerBound) / (this.upperBound
?                  ----

+ int g = (int) ((v - this.lowerBound) / (this.upperBound - this.lowerBound) * 255.0);
?                                                        +++++++++++++++++++++++++++++

- - this.lowerBound) * 255.0);
+ g = Math.min(255, Math.max(0, g)); // Clamp 'g' value to be within 0-255 range
  return new Color(g, g, g);
  }

  public Paint getPaint(double value) {
+ // Ensure value is within bounds
  double v = Math.max(value, this.lowerBound);
  v = Math.min(v, this.upperBound);
+ // Calculate grayscale value based on range
- int g = (int) ((value - this.lowerBound) / (this.upperBound
?                  ----

+ int g = (int) ((v - this.lowerBound) / (this.upperBound - this.lowerBound) * 255.0);
?                                                        +++++++++++++++++++++++++++++

- - this.lowerBound) * 255.0);
+ // Clamp grayscale value to be within 0-255 range
+ g = Math.min(255, Math.max(0, g));
  return new Color(g, g, g);
  }

  public Paint getPaint(double value) {
+ // Ensure value is within bounds
  double v = Math.max(value, this.lowerBound);
  v = Math.min(v, this.upperBound);
+ // Calculate grayscale value based on range
- int g = (int) ((value - this.lowerBound) / (this.upperBound
?                  ----

+ int g = (int) ((v - this.lowerBound) / (this.upperBound - this.lowerBound) * 255.0);
?                                                        +++++++++++++++++++++++++++++

- - this.lowerBound) * 255.0);
+ // Clamp grayscale value to be within 0-255 range
+ g = Math.min(255, Math.max(0, g));
+ // Create a grayscale Color using the calculated value
  return new Color(g, g, g);
  }

  public Paint getPaint(double value) {
  double v = Math.max(value, this.lowerBound);
  v = Math.min(v, this.upperBound);
- int g = (int) ((value - this.lowerBound) / (this.upperBound
?                  ----

+ int g = (int) ((v - this.lowerBound) / (this.upperBound - this.lowerBound) * 255.0);
?                                                        +++++++++++++++++++++++++++++

- - this.lowerBound) * 255.0);
+ g = Math.min(Math.max(g, 0), 255); // Ensure 'g' value is within 0-255 range
  return new Color(g, g, g);
  }

  public Paint getPaint(double value) {
+ // Ensure value is within bounds
  double v = Math.max(value, this.lowerBound);
  v = Math.min(v, this.upperBound);
+ // Calculate grayscale value based on range
- int g = (int) ((value - this.lowerBound) / (this.upperBound
?                  ----

+ int g = (int) ((v - this.lowerBound) / (this.upperBound - this.lowerBound) * 255.0);
?                                                        +++++++++++++++++++++++++++++

- - this.lowerBound) * 255.0);
+ // Clamp grayscale value to be within 0-255 range
+ g = Math.min(Math.max(0, g), 255);
+ // Create a grayscale Color using the calculated value
  return new Color(g, g, g);
  }

  public Paint getPaint(double value) {
  double v = Math.max(value, this.lowerBound);
  v = Math.min(v, this.upperBound);
- int g = (int) ((value - this.lowerBound) / (this.upperBound
?                  ----

+ int g = (int) ((v - this.lowerBound) / (this.upperBound - this.lowerBound) * 255.0);
?                                                        +++++++++++++++++++++++++++++

- - this.lowerBound) * 255.0);
+ g = Math.min(Math.max(0, g), 255); // Ensure 'g' value is within 0-255 range
  return new Color(g, g, g);
  }

  public Paint getPaint(double value) {
+ double v = Math.max(this.lowerBound, Math.min(value, this.upperBound));
- double v = Math.max(value, this.lowerBound);
- v = Math.min(v, this.upperBound);
- int g = (int) ((value - this.lowerBound) / (this.upperBound
?                  ----

+ int g = (int) ((v - this.lowerBound) / (this.upperBound - this.lowerBound) * 255.0);
?                                                        +++++++++++++++++++++++++++++

- - this.lowerBound) * 255.0);
+ g = Math.min(Math.max(0, g), 255); // Clamp 'g' value to be within 0-255 range
  return new Color(g, g, g);
  }

  public Paint getPaint(double value) {
- double v = Math.max(value, this.lowerBound);
- v = Math.min(v, this.upperBound);
+ // Ensure value is within bounds
+ double v = Math.max(this.lowerBound, Math.min(value, this.upperBound));
+ // Calculate grayscale value based on range
- int g = (int) ((value - this.lowerBound) / (this.upperBound
?                  ----

+ int g = (int) ((v - this.lowerBound) / (this.upperBound - this.lowerBound) * 255.0);
?                                                        +++++++++++++++++++++++++++++

- - this.lowerBound) * 255.0);
+ // Clamp grayscale value to be within 0-255 range
+ g = Math.min(Math.max(0, g), 255);
+ // Create a grayscale Color using the calculated value
  return new Color(g, g, g);
  }

  public Paint getPaint(double value) {
  double v = Math.max(value, this.lowerBound);
  v = Math.min(v, this.upperBound);
- int g = (int) ((value - this.lowerBound) / (this.upperBound
?                  ----

+ int g = (int) ((v - this.lowerBound) / (this.upperBound - this.lowerBound) * 255.0);
?                                                        +++++++++++++++++++++++++++++

- - this.lowerBound) * 255.0);
+ g = Math.max(0, Math.min(255, g)); // Ensure 'g' value is within 0-255 range
  return new Color(g, g, g);
  }

  public Paint getPaint(double value) {
  double v = Math.max(value, this.lowerBound);
  v = Math.min(v, this.upperBound);
- int g = (int) ((value - this.lowerBound) / (this.upperBound
?                  ----

+ int g = (int) ((v - this.lowerBound) / (this.upperBound - this.lowerBound) * 255.0);
?                                                        +++++++++++++++++++++++++++++

- - this.lowerBound) * 255.0);
+ g = Math.max(0, Math.min(g, 255)); // Ensure 'g' value is within 0-255 range
  return new Color(g, g, g);
  }

